# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

# ### How to add custom snippets
#
# > Q: How could I add custom UltiSnips snippets.
# > A: You can create snippet files in folder: $VIMCONFIG/coc/ultisnips, use command :CocCommand snippets.editSnippets to open user snippet of current filetype.
# >
# > ref. https://github.com/neoclide/coc-snippets#faq
#
# ### c++ default snippets
#
# ~/.local/share/nvim/plugged/vim-snippets/snippets/cpp.snippets
#
snippet init
#include <bits/stdc++.h>
using namespace std;
using ll = long long;

int main() {
  return 0;
}
endsnippet
