# .tmux.conf
#
# Reload tmux config
#   C-t + :
#   source-file ~/.tmux.conf
#
# Copy mode
#   Check to the following configuration in iTerm2.
#     Preferences > General > Selection > Applications in terminal may access clipboard
#
#   C-t + [  Enter copy mode
#   Space    Set start position
#   Enter    Set end position and copy to clip board

########################################
# set-option
########################################
# change prefix from b to t
set-option -g prefix C-t
unbind C-b

# reduce delay when entering esc (from 500ms to 0ms)
set-option -g escape-time 0

# foreground/background color
set-option -g pane-active-border-style bg=green,fg=black

# ref. https://dev.to/mjswensen/configurations-for-a-friendlier-tmux-status-bar-32n3
set-option -g status-left " #S "
set-option -g status-left-style bg=white,fg=black

# Do not display right contents
set-option -g status-right ""
set-option -g status-right-style bg=white,fg=black

set-option -g window-status-format " #I: #W "

set-option -g window-status-current-format " #I: #W "
set-option -g window-status-current-style bg=black,fg=green

# prevent the situation that colors aren't displayed correctly
# cf. https://github.com/neovim/neovim/wiki/FAQ#colors-arent-displayed-correctly
set-option -g default-terminal "screen-256color"

# Enable vim to display true color
#
# INFO: To display true color, add "set termguicolors" to the neovim config.
# MEMO: I follow the advice given by neovim's checkhealth command and add the tmux config.
#
#   - WARNING: Neither Tc nor RGB capability set. True colors are disabled. 'termguicolors' won't work properly.
#     - ADVICE:
#       - Put this in your ~/.tmux.conf and replace XXX by your $TERM outside of tmux:
#           set-option -sa terminal-overrides ',XXX:RGB'
#
set-option -sa terminal-overrides ',xterm-256color:RGB'

# Renumber window index number when closing window.
set-option -g renumber-windows on

# Show status bar to the top
set-option -g status-position top

# Use vi key bindings in copy mode
set-option -w -g mode-keys vi

########################################
# bind-key
########################################
# select pane to vim style
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R
bind-key ^t select-pane -t :.+

# resize pane to vim style
bind-key H resize-pane -L 5
bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key L resize-pane -R 5

# Make the directory of the new pane the same as current pane
bind-key c new-window -c '#{pane_current_path}'      # create
bind-key % split-window -h -c '#{pane_current_path}' # horizontal split
bind-key '"' split-window -c '#{pane_current_path}'  # vertical split
